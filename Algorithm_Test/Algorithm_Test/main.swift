//그래서 순간 이동을 하는 것이 더 효율적이다.
//n 만큼의 거리 이동을 할 껀데, 건전지 사용량의 최소값을 return 해라.
//내가 생각하기엔 2가지 케이스가 필요하다.
//우선 1만큼 이동한 후 순간이동 vs 1보다 큰 거리를 이동한 후 순간이동을 했을 때 n에 더 근접한 것

//라고 생각했는데, 완전히 잘못 생각했다. 그냥 N을 2로 나누고 홀수면 1 만큼 빼주고 배터리 사용량을 1 더해주면 되는건데
import Foundation

func solution(_ n:Int) -> Int {
    var ans:Int = 0
    
    var n = n
    while n > 0 {
        ans += (n % 2)
        n = (n % 2 == 0) ? n/2 : n-1
    }
    
    return ans
}
